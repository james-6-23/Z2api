# DeepInfra2API Go 版本 Docker Compose 配置
# 使用方法：
# 1. 复制 .env.example 为 .env 并修改配置
# 2. 运行：docker compose up -d
# 3. 停止：docker compose down

version: '3.8'

services:
  deepinfra-proxy-go:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: deepinfra-proxy-go
    ports:
      - "${PORT:-8001}:${PORT:-8001}"
    env_file:
      - .env
    environment:
      # 从 .env 文件加载配置，以下为默认值
      - PORT=${PORT:-8001}
      - VALID_API_KEYS=${VALID_API_KEYS:-linux.do}
      - DEEPINFRA_MIRRORS=${DEEPINFRA_MIRRORS:-https://api.deepinfra.com/v1/openai/chat/completions}
      - PERFORMANCE_MODE=${PERFORMANCE_MODE:-balanced}
      - MAX_RETRIES=${MAX_RETRIES:-3}
      - RETRY_DELAY=${RETRY_DELAY:-1000}
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:-120000}
      - STREAM_TIMEOUT=${STREAM_TIMEOUT:-300000}
      - RANDOM_DELAY_MIN=${RANDOM_DELAY_MIN:-100}
      - RANDOM_DELAY_MAX=${RANDOM_DELAY_MAX:-500}
      - STREAM_BUFFER_SIZE=${STREAM_BUFFER_SIZE:-16384}
      - DISABLE_CONNECTION_CHECK=${DISABLE_CONNECTION_CHECK:-false}
      - MAX_CONCURRENT_CONNECTIONS=${MAX_CONCURRENT_CONNECTIONS:-1000}
      - CONNECTION_QUEUE_SIZE=${CONNECTION_QUEUE_SIZE:-500}
      - MAX_CONNECTION_TIME=${MAX_CONNECTION_TIME:-600000}
      - MEMORY_LIMIT_MB=${MEMORY_LIMIT_MB:-2048}
      - ENABLE_METRICS=${ENABLE_METRICS:-true}
      - ENDPOINT_STRATEGY=${ENDPOINT_STRATEGY:-official_first}
      - ENDPOINT_HEALTH_CHECK=${ENDPOINT_HEALTH_CHECK:-false}
      - ENDPOINT_FAILOVER_TIMEOUT=${ENDPOINT_FAILOVER_TIMEOUT:-5000}
      - ENDPOINT_RETRY_DELAY=${ENDPOINT_RETRY_DELAY:-2000}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-8001}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./logs:/app/logs
    networks:
      - deepinfra-network

  # WARP 代理服务（可选）
  # 要启用 WARP 代理：
  # 1. 在 .env 文件中设置 WARP_ENABLED=true
  # 2. 取消注释以下配置
  # 3. 运行：docker compose up -d
  deepinfra-warp:
    image: caomingjun/warp:latest
    container_name: deepinfra-warp
    restart: unless-stopped
    ports:
      - "1080:1080"
    environment:
      - WARP_SLEEP=2
      - WARP_LICENSE_KEY=${WARP_LICENSE_KEY:-}
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv4.conf.all.src_valid_mark=1
    volumes:
      - /lib/modules:/lib/modules:ro
    networks:
      - deepinfra-network
    profiles:
      - warp

networks:
  deepinfra-network:
    driver: bridge
    name: deepinfra-go-network
